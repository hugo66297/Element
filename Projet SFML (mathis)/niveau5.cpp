#include <SFML/Graphics.hpp>
using namespace sf;
#define BLOC 32

void niveau5(bool *win5)
{
    int positionXduBlocImage = 0;
    Texture tileset;
    if (!tileset.loadFromFile("tileset.png",IntRect(positionXduBlocImage, 0, 32, 32)))
        printf("Erreur de chargement de l'image tileset");

    Sprite blocTileset;
    blocTileset.setTexture(tileset);



    /*Texture tuile2;
    if (!tileset.loadFromFile("tileset.png",IntRect(0, 32, 32, 32)))
        printf("Erreur de chargement de l'image tileset");

    Sprite blocTuile2;
    blocTuile2.setTexture(tuile2);*/

    RenderWindow fenetre(VideoMode(1280, 960 ), "Niveau 5");
    fenetre.setFramerateLimit(60);

    int boxX = 32, boxY = 32;

    int persoX = 0, persoY = 0;
    RectangleShape perso(Vector2f(32,64));
    perso.setFillColor(Color::Red);

    int carte[30][40] =
    {
        {1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,1},
        {3,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5},
        {3,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5},
        {3,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5},
        {3,0,0,0,0,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5},
        {3,17,17,17,16,7,7,7,9,17,17,17,16,0,0,0,9,17,17,17,17,17,12,0,0,0,15,17,17,2,17,17,16,8,8,8,9,17,17,5},
        {3,0,0,0,0,7,7,7,18,0,0,0,0,0,0,0,18,0,0,0,0,0,18,0,0,0,0,0,0,18,0,0,0,0,0,0,18,0,0,5},
        {3,0,0,0,0,7,7,7,18,0,0,0,0,0,0,0,18,0,0,0,0,0,18,0,0,0,0,0,0,18,0,0,0,0,0,0,18,0,0,5},
        {3,0,0,0,0,7,7,7,18,0,0,0,0,0,0,0,18,24,25,0,0,0,18,0,0,0,0,0,0,18,0,0,0,0,0,0,13,0,0,5},
        {3,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,18,26,27,0,0,0,18,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,5},
        {3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,17,16,0,0,0,18,0,0,0,0,0,0,10,17,17,17,17,17,17,12,0,0,5},
        {3,17,17,17,17,17,16,0,0,0,0,15,17,17,17,17,3,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,5},
        {3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,9,3,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,5},
        {3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,5,3,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,5},
        {3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,15,17,4,3,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,5},
        {3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,18,0,0,0,0,0,0,9,17,17,17,16,0,0,18,0,0,5},
        {3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,12,0,0,0,0,18,0,0,0,0,0,0,18,0,0,0,0,0,0,18,0,0,5},
        {3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,3,0,0,0,0,18,0,0,0,0,0,0,18,0,0,0,0,0,0,18,0,0,5},
        {3,0,0,0,0,15,17,17,2,17,17,17,17,17,17,17,4,4,17,16,0,0,18,0,0,0,0,0,0,18,0,0,0,0,0,0,18,0,0,5},
        {3,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,18,0,0,0,0,0,0,13,0,0,5},
        {3,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,9,1,2,2,2,2,2,2,3,0,0,0,0,0,0,0,0,0,5},
        {3,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,5,1,1,1,1,1,1,1,3,0,0,0,0,0,0,14,0,0,5},
        {3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,1,4,4,4,4,4,4,4,4,16,0,0,15,17,17,3,0,0,5},
        {3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,5},
        {3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,1,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,5},
        {3,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,15,4,4,4,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,5},
        {3,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,5},
        {3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,5},
        {3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,5},
        {1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1}
    };


    //fenetre.display();


    while (fenetre.isOpen())
    {
        Event event;
        while (fenetre.pollEvent(event))
        {
            switch (event.type)
            {
            case Event::Closed:
                fenetre.close();
                break;
            }
        }

        if (Keyboard::isKeyPressed(Keyboard::Up))
            persoY--;
        if (Keyboard::isKeyPressed(Keyboard::Down))
            persoY++;
        if (Keyboard::isKeyPressed(Keyboard::Left))
            persoX--;
        if (Keyboard::isKeyPressed(Keyboard::Right))
            persoX++;

        perso.setPosition(persoX,persoY);
        //fenetre.draw(perso);

        for (int y = 0; y < 30; y++)
        {
            for (int x = 0; x < 40; x++)
            {
                for (int i=0; i<28; i++)
                {
                    if (carte[y][x] == i)
                    {
                        blocTileset.setPosition(x*boxX, y*boxY);
                        positionXduBlocImage = BLOC * i;
                        tileset.loadFromFile("tileset.png",IntRect(positionXduBlocImage, 0, 32, 32));
                        fenetre.draw(blocTileset);
                    }
                }

            }
        }
        /*
        if(niveaureussit)
            win5=true;*/

        fenetre.display();
    }




}



